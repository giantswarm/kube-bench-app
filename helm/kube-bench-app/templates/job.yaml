apiVersion: batch/v1
kind: Job
metadata:
  name: "{{ .Release.Name }}-node"
  namespace: {{ tpl .Values.namespace  . }}
  labels:
    app: {{ tpl .Values.name  . }}
    chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
    release: "{{ .Release.Name }}"
  annotations:
    # This is what defines this resource as a hook. Without this line, the
    # job is considered part of the release.
    "helm.sh/hook": post-install
    "helm.sh/hook-delete-policy": "before-hook-creation"
    "helm.sh/hook-weight": "5"
spec:
  ttlSecondsAfterFinished: 300
  template:
    metadata:
      name: {{ .Release.Name }}
      labels:
        app: {{ tpl .Values.name  . }}
        release: "{{ .Release.Name }}"
    spec:
      hostPID: true
      serviceAccountName: {{ .Values.name }}
      restartPolicy: Never
      containers:
      - name: kube-bench-job
        image: "{{ .Values.image.registry }}/{{ .Values.image.name }}:{{ .Values.image.tag }}"
        command: ["kube-bench", "node", "--json", "true"]
        volumeMounts:
          - name: var-lib-etcd
            mountPath: /var/lib/etcd
            readOnly: true
          - name: var-lib-kubelet
            mountPath: /var/lib/kubelet
            readOnly: true
          - name: etc-systemd
            mountPath: /etc/systemd
            readOnly: true
          - name: etc-kubernetes
            mountPath: /etc/kubernetes
            readOnly: true
            # /usr/bin is mounted to access kubectl / kubelet, for auto-detecting the Kubernetes version.
            # You can omit this mount if you specify --version as part of the command.
          - name: usr-bin
            mountPath: /usr/bin
            readOnly: true
          - name: srv-kubernetes
            mountPath: /srv
            readOnly: true
          - mountPath: /opt/kube-bench/cfg/cis-1.3/config.yaml
            name: config
            subPath: config.yaml
          - mountPath: /opt/kube-bench/cfg/cis-1.4/config.yaml
            name: config
            subPath: config.yaml
          - mountPath: /opt/kube-bench/cfg/cis-1.5/config.yaml
            name: config
            subPath: config.yaml
      - name: kube-bench-job
        image: "{{ .Values.image.registry }}/{{ .Values.image.name }}:{{ .Values.image.tag }}"
        command: ["kube-bench", "node", "--json", "true"]
        volumeMounts:
          - name: var-lib-etcd
            mountPath: /var/lib/etcd
            readOnly: true
          - name: var-lib-kubelet
            mountPath: /var/lib/kubelet
            readOnly: true
          - name: etc-systemd
            mountPath: /etc/systemd
            readOnly: true
          - name: etc-kubernetes
            mountPath: /etc/kubernetes
            readOnly: true
            # /usr/bin is mounted to access kubectl / kubelet, for auto-detecting the Kubernetes version.
            # You can omit this mount if you specify --version as part of the command.
          - name: usr-bin
            mountPath: /usr/bin
            readOnly: true
          - name: srv-kubernetes
            mountPath: /srv
            readOnly: true
          - mountPath: /opt/kube-bench/cfg/cis-1.3/config.yaml
            name: config
            subPath: config.yaml
          - mountPath: /opt/kube-bench/cfg/cis-1.4/config.yaml
            name: config
            subPath: config.yaml
          - mountPath: /opt/kube-bench/cfg/cis-1.5/config.yaml
            name: config
            subPath: config.yaml         
      volumes:
        - name: var-lib-etcd
          hostPath:
            path: "/var/lib/etcd"
        - name: var-lib-kubelet
          hostPath:
            path: "/var/lib/kubelet"
        - name: etc-systemd
          hostPath:
            path: "/etc/systemd"
        - name: etc-kubernetes
          hostPath:
            path: "/etc" # /kubernetes"
        - name: usr-bin
          hostPath:
            path: "/usr/bin"
        - name: srv-kubernetes
          hostPath:
            path: "/srv"
        - name: config
          configMap:
            name: {{ tpl .Values.name  . }}
---
# Need second job for scheduling on master
apiVersion: batch/v1
kind: Job
metadata:
  name: "{{ .Release.Name }}-master"
  namespace: {{ tpl .Values.namespace  . }}
  labels:
    app: {{ tpl .Values.name  . }}
    chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
    release: "{{ .Release.Name }}"
  annotations:
    # This is what defines this resource as a hook. Without this line, the
    # job is considered part of the release.
    "helm.sh/hook": post-install
    "helm.sh/hook-delete-policy": "before-hook-creation"
    "helm.sh/hook-weight": "6"
spec:
  ttlSecondsAfterFinished: 300
  template:
    metadata:
      name: {{ .Release.Name }}
      labels:
        app: {{ tpl .Values.name  . }}
        release: "{{ .Release.Name }}"
    spec:
      hostPID: true
      tolerations:
      # Tolerate master taint
      - key: node-role.kubernetes.io/master
        operator: Exists
        effect: NoSchedule
      nodeSelector:
        node-role.kubernetes.io/master: ""
      serviceAccountName: {{ .Values.name }}
      restartPolicy: Never
      containers:
      - name: kube-bench-job-master
        image: "{{ .Values.image.registry }}/{{ .Values.image.name }}:{{ .Values.image.tag }}"
        command: ["kube-bench", "master", "--json", "true"]
        volumeMounts:
          - name: var-lib-etcd
            mountPath: /var/lib/etcd
            readOnly: true
          - name: var-lib-kubelet
            mountPath: /var/lib/kubelet
            readOnly: true
          - name: etc-systemd
            mountPath: /etc/systemd
            readOnly: true
          - name: etc-kubernetes
            mountPath: /etc/kubernetes
            readOnly: true
            # /usr/bin is mounted to access kubectl / kubelet, for auto-detecting the Kubernetes version.
            # You can omit this mount if you specify --version as part of the command.
          - name: usr-bin
            mountPath: /usr/bin
            readOnly: true
          - name: srv-kubernetes
            mountPath: /srv
            readOnly: true
          - mountPath: /opt/kube-bench/cfg/cis-1.3/config.yaml
            name: config
            subPath: config.yaml
          - mountPath: /opt/kube-bench/cfg/cis-1.4/config.yaml
            name: config
            subPath: config.yaml
          - mountPath: /opt/kube-bench/cfg/cis-1.5/config.yaml
            name: config
            subPath: config.yaml
      volumes:
        - name: var-lib-etcd
          hostPath:
            path: "/var/lib/etcd"
        - name: var-lib-kubelet
          hostPath:
            path: "/var/lib/kubelet"
        - name: etc-systemd
          hostPath:
            path: "/etc/systemd"
        - name: etc-kubernetes
          hostPath:
            path: "/etc" # /kubernetes"
        - name: usr-bin
          hostPath:
            path: "/usr/bin"
        - name: srv-kubernetes
          hostPath:
            path: "/srv"
        - name: config
          configMap:
            name: {{ tpl .Values.name  . }}
